apiVersion: v1
kind: Service
metadata:
  name: javaapp
  labels:
    app.kubernetes.io/name: javaapp
    app.kubernetes.io/instance: javaapp
    app.kubernetes.io/component: service
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-name: javaapp
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: javaapp
    app.kubernetes.io/instance: javaapp
    app.kubernetes.io/component: service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: javaapp
  labels:
    app.kubernetes.io/name: javaapp
    app.kubernetes.io/instance: javaapp
    app.kubernetes.io/component: service
spec:
  replicas: 0
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: javaapp
      app.kubernetes.io/instance: javaapp
      app.kubernetes.io/component: service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: javaapp
        app.kubernetes.io/instance: javaapp
        app.kubernetes.io/component: service
    spec:
      nodeSelector:
        intent: apps
        karpenter.sh/capacity-type: on-demand
        karpenter.k8s.aws/instance-family: "c6i"
      containers:
        - name: javaapp
          image: "CONTAINER_IMAGE"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          resources:
            limits:
              memory: APP_MEMORY
            requests:
              cpu: APP_VCPUS
              memory: APP_MEMORY